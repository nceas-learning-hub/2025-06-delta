---
format: 
  revealjs:
    slide-number: true
    code-link: true
    highlight-style: a11y
    chalkboard: true
    theme:
      - lh_slides_style.scss ### this lives in folder with slide qmd file
---

[Functions in R]{.custom-title}

[An introduction to programming in R]{.custom-subtitle}

<hr class="hr-red">

::: {.column width="50%"}
[**NCEAS Learning Hub**]{.custom-subtitle2}<br>
:::

---

**A function is a way to group a set of commands together to undertake a task in a reusable way.** When a function is executed, it produces a return value. We often say that we are "calling" a function when it is executed. Functions can be user defined and saved to an object using the assignment operator, so you can write whatever functions you need, but R also has a mind-blowing collection of built-in functions ready to use. To start, we will be using some built in R functions.

**All functions are called using the same syntax:** function name with parentheses around what the function needs in order to do what it was built to do. These "needs" are pieces of information called arguments, and are required to return an expected value.

::: {.callout-caution icon=false}
### Syntax of a function will look something like:

```
result_value <- function_name(argument1 = value1, argument2 = value2, ...)
```
:::

---

Before we use a function, let's talk about Help pages.

## Getting help using help pages

What if you know the name of the function that you want to use, but don't know exactly how to use it? Thankfully RStudio provides an easy way to access the help documentation for functions.

The next function we're about to use is the `mean()` function. 

To access the help page for `mean()`, enter the following into your console:

```{r}
#| eval: false
?mean
```

The Help pane will show up in the lower right hand corner of your RStudio.

The Help page is broken down into sections:

-   Description: An extended description of what the function does.
-   Usage: The arguments of the function(s) and their default values.
-   Arguments: An explanation of the data each argument is expecting.
-   Details: Any important details to be aware of.
-   Value: The data the function returns.
-   See Also: Any related functions you might find useful.
-   Examples: Some examples for how to use the function.

And there's also help for when you only sort of remember the function name: double-question mark:

```{r}
#| eval: false
??install 
```

---

::: {.callout-caution icon=false}
#### Not all functions have (or require) arguments

Check out the documentation or Help page for `date()`.

```{r}
#| eval: false
?date()
```

:::

---

!!!packages?
